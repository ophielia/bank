Bootstrap!

	old pages - transactions, edit transaction, category, edit category, 
	target & target details, category rules, import, category rules
	new thing - quickgroups
aggregate puzzle


future - change to JPA criteria!!?? (SearchService)

start web scaffolding
		add move up functionality

Run test on CategoryServiceTest		
				
	next up - TargetGroup
		go ahead and make a model....
		
	import started
		

check / take care of column manager - still Hib

remove dojo script


think about menu.... make second level for categories, rules, targets
	<li><moo:menulink label="menu_top_menuplans" url="/" />Transactions</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Import</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Maintain Categories</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Monthly Targets</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Yearly Targets</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Maintain Rules</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Assign By Rules</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Reports</li>
	
	
---- begin commit changes ----

done - validation for parent category id!! (really - in create??) circular possible??
done -  change model attribute from category to categorymodel (should fix errors)
done -  investigate why changes aren't shown on error edit page....
done - scaffold category rules...web mvc scaffold --class ~.web.security.SecurityController --backingType ~.model.security.Account --path /security/users
done - create category page - manually
done - test create category page - in Test
done - redirect after create should be to list page - once it's created....
done - edit category page....
done - linked from category list to edit
done categoryrule controller / page
done - 	change name in menu (no Dao) and move to rules section.
done - 	add link to new on list page
done - 	add transient field display to CategoryRuleDao
done - 	fill in controller / (new) services method
done - remove filemove from controller
done - make sure is working with SocGenHelper....

		
---- end commit changes ----

----- begin branch changes ----
done - create project
done - add fields to entities
done - get into git - local
done - shells of TransactionManagerDao moved to services and repositories
done - compile ready BankTransactionService
done - BankTransactionManager - (old TransactionManager) put repo methods into repository
nevermind - add relationship mapping to CategoryRule
done - get into git - github
done - service / component annotations for BankTransactionService and implementation
done - BankTransactionService into implementations of interface.
done - TargetService - migrate...
done -  transform CategoryManager - moving through and moving to service - repository....
done - add relationships - target group and details
done - SearchService, TargetService into implementations of interface.
done - compile ready SearchService - remove hibernate from db hits - use scalarDao as model
done - to be deleted - CategoryManager, CategoryManagerDaos, TransactionManagerDaos
done - revisit BankTransService - remove old CategoryManager, and use new one.
done - webmvc setup
done - add hmenu....
done - clean up ColumnValues - tests, packages, bad compiles
done - input tags works with "short" labels...
done - add create category to menu
done - need true false - checkboxes for display, and non-expense
done - validation is wired in - needs to be tested / worked out


---- end branch changes ----


Notes: 

1: CategoryTADao created on ids and not Entities.  Keep this way?? Yes - so many recursives.  might get coomplicated with objects.

