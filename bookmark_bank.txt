Bootstrap!

	old pages - transactions, edit transaction, category, edit category, 
	target & target details, category rules, import, category rules
	new thing - quickgroups
aggregate puzzle



check / take care of column manager - still Hib
Category Edit page - not displaying current "owning" category
remove hard copy dojo scripts
look at failed maven all tests

---->future - change to JPA criteria!!?? (SearchService)
continuing expenselist:
	add bulk update category
	add edit links


ColumnManagerService displayonly should change sql depending upon true or false


think about menu.... make second level for categories, rules, targets
	<li><moo:menulink label="menu_top_menuplans" url="/" />Transactions</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Import</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Maintain Categories</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Monthly Targets</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Yearly Targets</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Maintain Rules</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Assign By Rules</li>
	<li><moo:menulink label="menu_top_menuplans" url="/" />Reports</li>
	
	
---- begin commit changes ----

done - JPA Criteria used for ExpenseList (not aggregates) in SearchService
done - begin wiring page. - step 1
done - make page
done - make ExpenseListController
done - make ExpenseListModel
done -  bug in ExpenseCriteria - nothing for daterange all.  Add handling in setDateRangeFromType
done - in ExpenseCriteria - change Month class to DateRange class
done - add all options to selects in expense page
done - still not returning results

---- end commit changes ----

----- begin branch changes ----
done - create project
done - add fields to entities
done - get into git - local
done - shells of TransactionManagerDao moved to services and repositories
done - compile ready BankTransactionService
done - BankTransactionManager - (old TransactionManager) put repo methods into repository
nevermind - add relationship mapping to CategoryRule
done - get into git - github
done - service / component annotations for BankTransactionService and implementation
done - BankTransactionService into implementations of interface.
done - TargetService - migrate...
done -  transform CategoryManager - moving through and moving to service - repository....
done - add relationships - target group and details
done - SearchService, TargetService into implementations of interface.
done - compile ready SearchService - remove hibernate from db hits - use scalarDao as model
done - to be deleted - CategoryManager, CategoryManagerDaos, TransactionManagerDaos
done - revisit BankTransService - remove old CategoryManager, and use new one.
done - webmvc setup
done - add hmenu....
done - clean up ColumnValues - tests, packages, bad compiles
done - input tags works with "short" labels...
done - add create category to menu
done - need true false - checkboxes for display, and non-expense
done - validation is wired in - needs to be tested / worked out
done - validation for parent category id!! (really - in create??) circular possible??
done -  change model attribute from category to categorymodel (should fix errors)
done -  investigate why changes aren't shown on error edit page....
done - scaffold category rules...web mvc scaffold --class ~.web.security.SecurityController --backingType ~.model.security.Account --path /security/users
done - create category page - manually
done - test create category page - in Test
done - redirect after create should be to list page - once it's created....
done - edit category page....
done - linked from category list to edit
done categoryrule controller / page
done - 	change name in menu (no Dao) and move to rules section.
done - 	add link to new on list page
done - 	add transient field display to CategoryRuleDao
done - 	fill in controller / (new) services method
done - remove filemove from controller
done - make sure is working with SocGenHelper....
done - Run test on CategoryServiceTest		
done - import started				
done - write test for CRS.moveUp
done -make it green
done - write test for CRS.delete
done - make it green
done - add moveUp to CategoryRuleController
done - add delete to CategoryRuleController
done - take dojo script from cloud
done - Rules - add move up functionality
done - continue work on TargetModel - constructor, and categoryhash
done -  working on create target page.  
done - get page to compile
done - fill out page with selects
done - begin working on back end  - will need new method which creates the group. (old create changed to copy....)
done - fill in show page (initial - without details...)
done - add TargetDetail to model validator
done - back end also needs a load TargetModel method
done - toggle visibility of entry row.
done - wire in entry row to add detail
done - jpa session hell - can't call up proxy....
done - row select year tag...
done - fill in show page to show rows as well.
done - solve problem about group save - how and when to save it. save with edit
done - error testing in jsp
done - implement validator to validateTargetDetail
done - continue work on TargetModel - constructor, and categoryhash
done -  working on create target page.  
done - get page to compile
done - fill out page with selects
done - begin working on back end  - will need new method which creates the group. (old create changed to copy....)
done - fill in show page (initial - without details...)
done - add TargetDetail to model validator
done - back end also needs a load TargetModel method
done - toggle visibility of entry row.
done - wire in entry row to add detail
done - jpa session hell - can't call up proxy....
done - row select year tag...
done - fill in show page to show rows as well.
done - solve problem about group save - how and when to save it. save with edit
done - error testing in jsp
done - implement validator to validateTargetDetail
done - add error handling to page
done - go ahead and make a model....
done - add error tags to show errors
done - test different error handling 
done - make back end for delete and test
done - add target detail - doesn't add duplicate category
done - delete validateTargetDetail method
done - create new rule not working
done - wire controller for delete entry.....
done - for a delete button - on(form, "submit, button:click", submitHandler);	
done - begin working on editing existing rows
done - add delete detail to editpage
done - add handling to show correct tag when page is loaded (javascript depending upon type)
done  - add errors for group fields
done - working on edit target group page.
done - next step, saving edit action
done - currently - edit isn't working like it was before . fix that and get it so save.
done - last clean up, edit page
done - last clean up - fix table
done - hide add detail button when edit
done - clean out unused code in controller
done - add reset button
done - test - global save - wire in
done - cant figure out why it's going to show after create - should be edit
done - in validation for edit detail - don't count current category as repeat
done - after validation - edit row with errors shown in edit, and also in list.  fix this.
done - create page - add the month and year select boxes       
done - group validation - // check no duplicate of month tag or year tag
done - group validation - // check no duplicate of default		
done - next up - TargetGroup List - update default
done -- basically working - just need to reflect value in checkbox (checked for true....)
done - javascript for setting id before submit
done - TargetController method for receiving default update
done - Wire to backend

---- end branch changes ----


Notes: 

1: CategoryTADao created on ids and not Entities.  Keep this way?? Yes - so many recursives.  might get coomplicated with objects.

Later Development

1. separate different target types into different pages
2. TargetGroup - put monthtag and yeartag into same field.
3. fuzziness with importclient in importmanager.  Would need to be handled much differently in a multiuserenvironment